// do not modify -- autogenerated by separateparsingtable

#ifndef PARSINGTABLE_H
#define PARSINGTABLE_H     1

// code auto-generated by ebnfcomp; do not modify!
// (code might get overwritten during next ebnfcomp invocation)

#include <stddef.h>

typedef enum _nodeclass_t {
    NC_TERMINAL,
    NC_PRODUCTION,
    NC_MANDATORY,
    NC_ALTERNATIVE,
    NC_OPTIONAL,
    NC_OPTIONAL_REPETITIVE,
} nodeclass_t;

typedef enum _terminaltype_t {
    TT_UNDEF,
    TT_STRING,
    TT_REGEX,
} terminaltype_t;

typedef enum _nodetype_t {
    _NT_GENERIC,
    NT_INT_LIT,
    NT_TERMINAL_1,
    NT_REAL_LIT,
    NT_TERMINAL_DOT,
    NT_TERMINAL_7,
    NT_TERMINAL_MINUS,
    NT_STR_LIT,
    NT_TERMINAL_11,
    NT_BOOL_LIT,
    NT_TERMINAL_TRUE,
    NT_TERMINAL_FALSE,
    NT_PTR_LIT,
    NT_TERMINAL_NIL,
    NT_IDENTIFIER,
    NT_TERMINAL_19,
    NT_BASE_TYPE,
    NT_TERMINAL_INT,
    NT_TERMINAL_REAL,
    NT_TERMINAL_STRING,
    NT_TERMINAL_BYTE,
    NT_TERMINAL_BOOL,
    NT_OBJECT_POINTER,
    NT_TERMINAL_XOR,
    NT_CELL_TYPE,
    NT_CELL_POINTER,
    NT_TERMINAL_STAR,
    NT_TYPE,
    NT_TYPE_LIST,
    NT_TERMINAL_COMMA,
    NT_NEG_OP,
    NT_TERMINAL_NOT,
    NT_MULT_OP,
    NT_TERMINAL_SLASH,
    NT_TERMINAL_MOD,
    NT_ADD_OP,
    NT_TERMINAL_PLUS,
    NT_SHF_OP,
    NT_TERMINAL_SHL,
    NT_TERMINAL_SHR,
    NT_CMP_OP,
    NT_TERMINAL_NE,
    NT_TERMINAL_LE,
    NT_TERMINAL_GE,
    NT_TERMINAL_EQ,
    NT_TERMINAL_LT,
    NT_TERMINAL_GT,
    NT_AND_OP,
    NT_TERMINAL_AND,
    NT_OR_OP,
    NT_TERMINAL_OR,
    NT_C_NUM_BASE_E,
    NT_TERMINAL_LPAREN,
    NT_TERMINAL_RPAREN,
    NT_C_NUM_NEG_E,
    NT_C_NUM_MULT_E,
    NT_C_NUM_ADD_E,
    NT_C_NUM_SHF_E,
    NT_C_NUM_CMP_E,
    NT_C_NUM_AND_E,
    NT_C_NUM_OR_E,
    NT_C_NUM_E,
    NT_C_STR_BASE_E,
    NT_C_STR_ADD_E,
    NT_C_STR_CMP_E,
    NT_C_STR_AND_E,
    NT_C_STR_OR_E,
    NT_C_STR_E,
    NT_C_BOOL_BASE_E,
    NT_C_BOOL_NOT_E,
    NT_C_BOOL_AND_E,
    NT_C_BOOL_OR_E,
    NT_C_BOOL_E,
    NT_C_PTR_E,
    NT_CONST_EXPR,
    NT_C_EXPR_LIST,
    NT_ACCESS_OP,
    NT_TERMINAL_150,
    NT_TERMINAL_LBRACK,
    NT_TERMINAL_RBRACK,
    NT_IDENT_ACCESS,
    NT_CALL_ACCESS,
    NT_VALOF_EXPR,
    NT_TERMINAL_VALOF,
    NT_NUM_BASE_E,
    NT_NUM_NEG_E,
    NT_NUM_MULT_E,
    NT_NUM_ADD_E,
    NT_NUM_SHF_E,
    NT_NUM_CMP_E,
    NT_NUM_AND_E,
    NT_NUM_OR_E,
    NT_NUM_E,
    NT_STR_BASE_E,
    NT_STR_ADD_E,
    NT_STR_CMP_E,
    NT_STR_AND_E,
    NT_STR_OR_E,
    NT_STR_E,
    NT_BOOL_BASE_E,
    NT_BOOL_NOT_E,
    NT_BOOL_AND_E,
    NT_BOOL_OR_E,
    NT_BOOL_E,
    NT_ARRAY_INST,
    NT_TERMINAL_DYNAMIC,
    NT_TERMINAL_ASSOC,
    NT_OBJECT_INST,
    NT_PTR_E,
    NT_TERMINAL_NEW,
    NT_EXPR,
    NT_EXPR_LIST,
    NT_CALL_ARG,
    NT_TERMINAL_257,
    NT_TERMINAL_DEFAULT,
    NT_CALL_ARG_LIST,
    NT_BLOCK,
    NT_TERMINAL_LBRACE,
    NT_TERMINAL_RBRACE,
    NT_OPTIONAL_BLOCK,
    NT_TERMINAL_SEMIC,
    NT_ARGUMENT_DECL,
    NT_TERMINAL_COLON,
    NT_TERMINAL_ELLIPSIS,
    NT_ARGUMENT_LIST,
    NT_ARG_DECLARATOR,
    NT_RETURN_DECL,
    NT_TERMINAL_RETURNING,
    NT_IDENT_LIST,
    NT_EXTENDS_CLAUSE,
    NT_TERMINAL_EXTENDS,
    NT_IMPL_CLAUSE,
    NT_TERMINAL_IMPLEMENTS,
    NT_VISIBILITY,
    NT_TERMINAL_PRIVATE,
    NT_TERMINAL_PROTECTED,
    NT_TERMINAL_PUBLIC,
    NT_ACCESS_TYPE,
    NT_TERMINAL_READONLY,
    NT_TERMINAL_READWRITE,
    NT_TERMINAL_WRITEONLY,
    NT_STORAGE_TYPE,
    NT_TERMINAL_STATIC,
    NT_DERIVATION,
    NT_TERMINAL_OVERRIDE,
    NT_TERMINAL_FINAL,
    NT_IMPLEMENTATION,
    NT_TERMINAL_IMPLEMENTATION,
    NT_ATTRIB_FLAG,
    NT_ATTRIB_FLAGS,
    NT_ATTRIB_DECL,
    NT_TERMINAL_ATTRIBUTE,
    NT_METHOD_FLAG,
    NT_METHOD_FLAGS,
    NT_METHOD_DECL,
    NT_TERMINAL_METHOD,
    NT_FIELD,
    NT_FIELD_LIST,
    NT_CLASS_DECL,
    NT_TERMINAL_CLASS,
    NT_IATTRIB_DECL,
    NT_IMETHOD_DECL,
    NT_IFIELD,
    NT_IFIELD_LIST,
    NT_INTERFACE_DECL,
    NT_TERMINAL_INTERFACE,
    NT_FUNC_DECL,
    NT_TERMINAL_FUNCTION,
    NT_PROC_DECL,
    NT_TERMINAL_PROCEDURE,
    NT_VAR_DECL,
    NT_TERMINAL_VAR,
    NT_CONST_DECL,
    NT_TERMINAL_CONST,
    NT_ENUM_ITEM,
    NT_ENUM_ITEM_LIST,
    NT_ENUM_DECL,
    NT_TERMINAL_ENUM,
    NT_LET_STMT,
    NT_TERMINAL_LET,
    NT_DECL_STMT,
    NT_BLOCK_DECL,
    NT_IMPORT_PATH,
    NT_IMPORT_LIST,
    NT_IMPORT_STMT,
    NT_TERMINAL_IMPORT,
    NT_XREF_TYPE,
    NT_TERMINAL_MODULE,
    NT_TERMINAL_PACKAGE,
    NT_TERMINAL_LIBRARY,
    NT_STR_LIT_LIST,
    NT_PLATFORM_SPEC,
    NT_TERMINAL_PLATFORM,
    NT_LANGUAGE_SPEC,
    NT_TERMINAL_LANGUAGE,
    NT_HEADER_SPEC,
    NT_TERMINAL_HEADER,
    NT_FUNCTION_SPEC,
    NT_PROCEDURE_SPEC,
    NT_CLASS_SPEC,
    NT_ALIEN_SPEC,
    NT_ALIEN_SPECS,
    NT_ALIEN_STMT,
    NT_TERMINAL_ALIEN,
    NT_GLOBAL_STMT,
    NT_GLOBAL_STMTS,
    NT_GLOBAL_INTRO,
    NT_GLOBAL_SPEC,
    NT_TERMINAL_PROGRAM,
    NT_GLOBAL_SCOPE,
    NT_LABEL_DECL,
    NT_CALL_STMT,
    NT_TERMINAL_CALL,
    NT_BLOCK_OR_STMT,
    NT_IF_STMT,
    NT_TERMINAL_IF,
    NT_TERMINAL_UNLESS,
    NT_TERMINAL_ELSE,
    NT_WHILE_STMT,
    NT_TERMINAL_WHILE,
    NT_TERMINAL_UNTIL,
    NT_REPEAT_STMT,
    NT_TERMINAL_REPEAT,
    NT_TERMINAL_DO,
    NT_LOOP_STMT,
    NT_TERMINAL_LOOP,
    NT_TERMINAL_FOREVER,
    NT_FOR_STMT,
    NT_TERMINAL_FOR,
    NT_TERMINAL_TO,
    NT_TERMINAL_DOWNTO,
    NT_LOOP_CONTROL,
    NT_TERMINAL_BREAK,
    NT_TERMINAL_CONTINUE,
    NT_TERMINAL_AGAIN,
    NT_LOOP_TYPE_STMT,
    NT_SWITCH_CASE,
    NT_TERMINAL_CASE,
    NT_DEFAULT_CASE,
    NT_ANY_CASE,
    NT_CASE_LIST,
    NT_SWITCH_STMT,
    NT_TERMINAL_SWITCH,
    NT_GOTO_STMT,
    NT_TERMINAL_GOTO,
    NT_TERMINAL_GOSUB,
    NT_RETURN_STMT,
    NT_TERMINAL_RETURN,
    NT_RESULTIS_STMT,
    NT_TERMINAL_RESULTIS,
    NT_DELETE_STMT,
    NT_TERMINAL_DELETE,
    NT_FLOW_CTRL_STMT,
    NT_STMT,
    NT_STATEMENT,
    NT_STATEMENT_LIST,
} nodetype_t;

typedef struct _parsingnode_t {
    nodeclass_t        nodeClass;
    nodetype_t         nodeType;
    terminaltype_t     termType;
    const char*        text;
    size_t             numBranches;
    int                branches;
} parsingnode_t;


#endif

